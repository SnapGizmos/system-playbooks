---
- name: Set database to internal or external
  set_fact:
    config_dynamic_database: "{{ ( (pg_host is not defined or pg_host == '') or (pg_host | match('/.*')) ) | ternary('internal', 'external') }}"

- name: Database decision
  debug: var=config_dynamic_database

- name: Set postgres host and port to local if not set
  set_fact:
    pg_host: '127.0.0.1'
    pg_port: 5432
  when: "pg_host is not defined or pg_host == ''"

- name: Ensure connectivity to hosts and gather facts
  setup:

- name: Ensure user is root
  fail: msg="User on remote machine is {{ hostvars[inventory_hostname].ansible_env.USER }} ({{ config_dynamic_user }} required)"
  when: "ansible_env.USER != '{{ config_dynamic_user }}'"

# Note: We don't validate postgres connectivity because the clients tools are not yet installed to validate with.
# We could verify socket connectivity to the ip/port but would need to do so using delegate_to
