---
- name: Check for custom ui logo
  stat:
    path: '{{ awx_install_home }}/public/static/assets/custom_console_logo.png'
  register: ui_logo

- name: Check for custom ui settings
  stat:
    path: '{{ awx_install_home}}/public/static/local_settings.json'
  register: ui_config

- name: Move away custom ui logo
  command: 'mv {{ awx_install_home }}/public/static/assets/custom_console_logo.png {{ awx_install_home }}'
  when: ui_logo.stat.exists

- name: Move away custom ui settings
  command: 'mv {{ awx_install_home }}/public/static/local_settings.json {{ awx_install_home }}'
  when: ui_config.stat.exists

- name: Install ubuntu Tower apt repository.
  template:
    src: apt_repo.j2
    dest: /etc/apt/sources.list.d/ansible_tower.list
  register: apt_repo

- name: A secret key may already exist; test if it does.
  stat:
    path: /etc/tower/SECRET_KEY
  register: secret_key

- name: If a secret key already exists, read it into memory.
  slurp:
    src: /etc/tower/SECRET_KEY
  register: sk_content
  when: secret_key.stat.exists

  # NOTE: The 'apt' module doesn't support installing packages with a wildcard
  # ('*').  Refer to https://github.com/ansible/ansible-modules-core/pull/28.
  # A fix is included in ansible-1.8. Older versions of ansible will call
  # 'apt-get' directly.
- name: Install Tower package with the apt module.
  apt:
    name: '{{ tower_package_deb }}'
    update_cache: yes
    state: present
    force: '{{ not gpgcheck|bool }}'
  when: ansible_version is defined and ansible_version.full|version_compare('1.8', '>=')
  register: apt_install

- name: Update apt cache when using the apt-get command
  apt:
    update_cache: yes
  when: apt_install|skipped

- name: Install Tower package with the apt-get command.
  command: "apt-get {{ (not gpgcheck|bool) and '--allow-unauthenticated' or '' }} -y install '{{tower_package_deb}}'"
  changed_when: "'0 upgraded, 0 newly installed' not in result.stdout"
  register: result
  when: apt_install|skipped

- name: Restore the secret key.
  copy:
    content: "{{ sk_content.content.decode('base64') }}"
    dest: /etc/tower/SECRET_KEY
    force: yes
  when: secret_key.stat.exists

# The 'path' parameter below works around an open ansible issue (https://github.com/ansible/ansible/issues/10190)
- name: Remove Tower apt repository configuration.
  file:
    path: '{{ apt_repo.path|default(apt_repo.dest) }}'
    state: absent
  when: apt_repo is defined

- name: Update apt cache
  apt:
    update_cache: yes
