---
- name: Preflight check - Ubuntu 12.04 is deprecated
  debug:
    msg: "Support for running Tower on Ubuntu 12.04 is deprecated, and will be removed in a future release."
  when: "ansible_distribution == 'Ubuntu' and ansible_distribution_version == '12.04'"

- name: Preflight check - Red Hat Enterprise Linux/CentOS 6 is deprecated
  debug:
    msg: "Support for running Tower on Red Hat Enterprise Linux 6 and CentOS 6 is deprecated, and will be removed in a future release."
  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"

- name: Preflight check - Fail if this machine lacks sufficient RAM.
  fail:
    msg: This machine does not have sufficient RAM to run Ansible Tower.
  when: ansible_memtotal_mb < required_ram|int

- name: Preflight check - Get umask
  shell: umask
  register: umask
  changed_when: False

- name: Preflight check - Get Hard Max FD limit
  shell: ulimit -H -n
  register: ulimit
  changed_when: False

- name: Preflight check - Does the system have a standard umask?
  fail:
    msg: 'The umask of the system ({{ umask.stdout.strip() }}) prevents successful installation. We suggest a standard umask such as 0022.'
  when: umask.stdout.strip()[-2:] not in ('00', '02', '20', '22')

- name: Preflight check - Verify minimum open fds
  fail:
    msg: 'The default max number of file descriptors is too low {{ ulimit.stdout }} should be {{ min_open_fds }}'
  when: ulimit.stdout|int < min_open_fds|int

- name: Determine which mountpoint /var exists on
  shell: "df /var | tail -n1 | awk '{print $NF}'"
  register: var_partition
  changed_when: False

- name: Preflight check - Does /var meet minimum disk space requirement
  fail:
    msg: 'The file system mounted at {{ item.mount }} does not meet minimum disk space requirement: {{ item.size_available }} < {{ minimum_var_space }}'
  when: "item.mount == var_partition.stdout and item.size_available < minimum_var_space|int"
  with_items: "{{ ansible_mounts }}"

- name: Preflight check - Get /var/log permissions
  stat: path=/var/log
  register: vl_st

- name: Preflight check - Does /var/log have appropriate permissions?
  fail:
    msg: 'The permissions on /var/log ({{ vl_st.stat.mode }}) prevent successful installation. /var/log must be world-readable.'
  when: not vl_st.stat.roth

- name: Preflight check - Read in tower version
  slurp:
    src: "{{ preflight_awx_home }}/.tower_version"
  register: result
  ignore_errors: true

- name: Preflight check - User must be on Tower 2.4.x to upgrade to 3.0.x
  fail:
    msg: 'Please upgrade to 2.4.x before upgrading to 3.0.x'
  when: "result.content is defined and result.content | b64decode | version_compare('2.4', '<')"

- name: Preflight check - Passwords must be defined for a fresh install
  fail:
    msg: 'Please configure passwords in the inventory file before running setup'
  when: "result.content is not defined and ((pg_password|default('') == '') or (admin_password|default('') == '') or (redis_password|default('') == ''))"

# Old versions of yum on Oracle Linux 6 have a problem with --enablerepo
# that breaks the setup playbook, so we need to make sure we have a new
# enough version.
- name: Preflight check - Read in yum version on OL6
  shell: "rpm -q yum --qf '%{VERSION}.%{RELEASE}'"
  register: yum_version
  when: "ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '6'"

- name: Preflight check - Verify yum is recent enough on OL6
  fail:
    msg: 'Please update yum to version 3.2.29-73.0.2 or higher'
  when: "ansible_distribution == 'OracleLinux' and ansible_distribution_major_version == '6' and (yum_version.stdout is not defined or yum_version.stdout | version_compare('3.2.29.73.0.2', '<'))"

