---
- name: If Ansible does not provide a system UUID, get a random one.
  shell: "echo 'import uuid; print(uuid.uuid4())' | python"
  register: system_uuid
  changed_when: False

- name: Write a ha.conf file to /etc/tower that contains the system UUID.
  template:
    dest: /etc/tower/conf.d/ha.py
    force: no
    mode: '0640'
    group: '{{ aw_user }}'
    owner: '{{ aw_user }}'
    src: ha.py

- name: Register the primary instance in the database.
  shell: tower-manage register_instance --primary --hostname="{{ inventory_hostname }}"
  args:
    executable: /bin/bash
  sudo_user: '{{ aw_user }}'
  sudo: True
  register: register_instance
  changed_when: "'changed: True' in register_instance.stdout"
  when: "'primary' in group_names"

- name: Register the secondary instances in the database.
  shell: tower-manage register_instance --secondary --hostname="{{ inventory_hostname }}"
  args:
    executable: /bin/bash
  sudo_user: '{{ aw_user }}'
  sudo: True
  register: register_instance
  changed_when: "'changed: True' in register_instance.stdout"
  when: "'secondary' in group_names"

# Remove in tower >= 3.1.0
- name: Stop MongoDB
  service:
    name: mongod
    state: stopped
    enabled: no
  register: result
  ignore_errors: True

- name: Create the default organization if it is needed.
  shell: tower-manage create_preload_data
  register: cdo
  changed_when: "'added' in cdo.stdout"
  when: "'primary' in group_names"
